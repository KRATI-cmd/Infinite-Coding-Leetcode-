Q) Find K closest number from given array 

arr[]={5,6,7,8,9}, n=5, k=3, X=7
O/P = 6,7,8

Approach: We need to find out the K closest no. i.e. near to X. So 6,7,8 are closest no. to 7 as their difference is minimum among all elements.

Identification: a) k
                b) smallest/ largest
i.e. one is true so we go for heap
For closest i.e. minimum , we go for max heap (reverse method). Chk in day 1.

Understand it by example.
    Initially we insert first element 5 & its absolute diff with X is 2. We insert 2(abs(a[i]-X)),5 in max heap & use pair in this case & chk heap size > K then pop => 1 >3 =false

    we insert (1,6) i.e.(abs diff,ele) due to max heap => |(1,6)|(2,5)| i.e. (2,5) is above because 2 >1 which is max heap => chk size > k => 2 >3 = false => don't pop

    we insert (0,7) i.e.(abs diff,ele) due to max heap => |(0,7)|(1,6)|(2,5)| i.e. (2,5) is above because 2 >1>0 which is max heap => chk size > k => 3 >3 = false => don't pop

    insert (1,8) i.e.(abs diff,ele) due to max heap => |(0,7)|(1,6)|(1,8)|(2,5)| i.e. (2,5) is above because 2 >1=1>0 which is max heap => chk size > k => 4 >3 = true => pop the top ele
    now ele in heap are |(0,7)|(1,6)|(1,8)| now chk size >k => 3>3 =>don't pop

    insert (2,9) i.e.(abs diff,ele) due to max heap => |(0,7)|(1,6)|(1,8)|(2,9)| i.e. (2,9) is above because 2 >1=1>0 which is max heap => chk size > k => 4 >3 = true => pop the top ele
    now ele in heap are |(0,7)|(1,6)|(1,8)| now chk size >k => 3>3 =>don't pop

Push all second elements to the vector i.e. [7,6,8]

priority_queue<pair<int,int>> maxh;
vector<int> ans;
  maxh.push({abs(arr[i]-X),arr[i]});
  while(maxh.size()>K){
    maxh.pop();
}
while(maxh.size()>0){
  ans.push_back(maxh.top().second);
  maxh.pop();
}


Thanks!! :) Keep going. Let me know if u have any doubt.

              


   
