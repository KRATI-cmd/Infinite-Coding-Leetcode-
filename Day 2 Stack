The Next greater Element for an element x is the first greater element on the right side of x in the array. Elements for which no greater element exist, consider the next greater element as -1. 

Example: 

Input: arr[] = [ 4 , 5 , 2 , 25 ]
Output:  4      –>   5
         5      –>   25
         2      –>   25
         25     –>   -1
Explanation: except 25 every element has an element greater than them present on the right side

Brute Approach: Using nested loops
: Traverse the array from index 0 to end.
: For each element start another loop from index i+1 to end.
  If a greater element is found in the second loop then print it and break the loop, else print -1.    

Code: int  nxt;
      for(int i=0;i<n;i++){
        nxt=-1;
          for(int j=i+1;j<n;j++){
              if(a[i]<a[j]){
                  nxt=a[j];
                  break;
              }
}
cout <<next << endl;
}



Optimal Code: Using Stack

Identification: a) Array
                b)Nested loop (j is dependent on i)

vector<int> v;
stack<int> st;
for(int i=ar.size()-1;i>=0;i--){
if(s.size()==0){
v.push_back(-1);}
else if(s.size()> 0 && s.top()>ar[i]){
v.push_back(st.top());
}
else if(s.size()> 0 && s.top()<=a[i]){
while(s.size()> 0 && s.top()<=a[i]){
s.pop();}
if(s.size()==0){
v.push_back(-1);}
else{
v.push_back(st.top());
}}
st.push(ar[i]);
}
reverse(v.begin(),v.end());

    
      
              

